/**
 * Sample TEST
 */
package com.uc.bs.cyber.daemon.txdm2560;

import java.io.IOException;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.uc.core.MapForm;
import com.uc.egtob.net.ClientMessageService;
import com.uc.bs.cyber.CbUtil;



/**
 * @author 프리비
 *
 */
public class Txdm2560CSample  extends ClientMessageService implements Runnable {

	/**
	 * 
	 * @throws IOException
	 * @throws Exception
	 */

	private int  myId = 0; 
	
	protected Log log = LogFactory.getLog(this.getClass());
	
	private Txdm2560FieldList bsField = null;
	
	/**
	 * 
	 * @param hostAddr
	 * @param port
	 * @throws IOException
	 * @throws Exception
	 */
	public Txdm2560CSample() {
		
		CbUtil.setupLog4jConfig(this, "log4j.tomcat.xml");
		
		bsField = new Txdm2560FieldList();
	}
		
	public static void main(String[] args) {
		
		int j = 0;
				
		while(true) {
			
			Txdm2560CSample client = new Txdm2560CSample();
			
			client.myId = j++;
			
			Thread thr = new Thread(client);

			thr.start();
			
			break;

		}		
	}


	
	public void run() {
		// TODO Auto-generated method stub
		
		
		MapForm dataMap = new MapForm();
        
		try {

			Txdm2560CSample client = new Txdm2560CSample();
			client.Connect("99.1.1.76", 4642);       /*위택스 테스트*/
			
			
			dataMap.setMap("SGG_COD", "325");
			dataMap.setMap("REG_NO", "7312191120031");
			dataMap.setMap("TAX_SNO", "000684");
			dataMap.setMap("DIL_GB", "1");
			
			
			long before = System.currentTimeMillis();
		
			client.sendData(bsField.getBuff(dataMap));
			
			//client.sendData("0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              000115992001IGN1102241008230230500000800EP00248284826100068502386076303092037727023010000078110224100821000000000006170S 0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              ".getBytes());
			
			byte[] recv  = client.recv(30);
			
			long after = System.currentTimeMillis();
			
			log.info("=============================================");
			log.info("  RECV TIME== " + ((after-before)/1000.0) + "Sec ::" +  new String(recv));
			log.info("=============================================");
			
			client.Disconnect();
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			 e.printStackTrace();
			log.error("=============================================");
			log.error(" RECV 오류발생 ID=" + myId + ", MSG=" + e.getMessage());
			log.error("=============================================");
		}
	}


	/**
	 * @return the myId
	 */
	public int getMyId() {
		return myId;
	}

	/**
	 * @param myId the myId to set
	 */
	public void setMyId(int myId) {
		this.myId = myId;
	}
	
	
}
