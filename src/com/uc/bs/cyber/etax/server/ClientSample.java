/**
 * Sample TEST
 */
package com.uc.bs.cyber.etax.server;

import java.io.IOException;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.uc.bs.cyber.service.we532001.We532001FieldList;
import com.uc.bs.cyber.service.we532002.We532002FieldList;
import com.uc.bs.cyber.service.we992001.We992001FieldList;

import com.uc.core.MapForm;
import com.uc.egtob.net.ClientMessageService;
import com.uc.bs.cyber.CbUtil;


/**
 * @author ÇÁ¸®ºñ
 *
 */
public class ClientSample  extends ClientMessageService implements Runnable {

	/**
	 * 
	 * @throws IOException
	 * @throws Exception
	 */

	private int  myId = 0; 
	
	protected Log log = LogFactory.getLog(this.getClass());
	
	
	/**
	 * 
	 * @param hostAddr
	 * @param port
	 * @throws IOException
	 * @throws Exception
	 */
	public ClientSample() {
		
		CbUtil.setupLog4jConfig(this, "log4j.tomcat.xml");
			
	}
		
	
	public static void main(String[] args) {


		int j = 0;
				
				while(true) {
					
					for(int i = 0; i<1; i++) {
						ClientSample client = new ClientSample();
						
						client.myId = j++;
						
						Thread thr = new Thread(client);
			
						thr.start();
					}
					
					try {
						Thread.sleep(20000);
						
						break;
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
	}


	
	public void run() {
		// TODO Auto-generated method stub
		//We532001FieldList fieldList = new We532001FieldList();
		We532002FieldList fieldList = new We532002FieldList();
		
		MapForm dataMap = new MapForm();
		

		try {

			ClientSample client = new ClientSample();
			client.Connect("127.0.0.1", 9835);
			//client.Connect("99.1.1.82", 9383);
			
			/*
			dataMap.setMap("CO_TRAN", "532001");
			dataMap.setMap("CO_DT", CbUtil.getCurrentTime());
			dataMap.setMap("CO_BKNUM", "123456789012");
			dataMap.setMap("CO_AGNUM", "123456789012");
			dataMap.setMap("CO_AGCOD", "12");
			dataMap.setMap("CO_AGENUM", "1234567");
			dataMap.setMap("IH_REGNO", "8410251124628");
			dataMap.setMap("EPAY_NO", "124124124124124");
			dataMap.setMap("SUM_RCP", "125100");
			dataMap.setMap("PAY_DT", CbUtil.getCurrentDate());
			dataMap.setMap("BANK_COD", "0320007");
			dataMap.setMap("PAY_REG_NO", "8410251124628");
			dataMap.setMap("PAY_SYSTEM", "1");
			dataMap.setMap("PAY_FORM", "1");
			dataMap.setMap("CARD_REQ_NO", "909090909090");
			dataMap.setMap("CARD_MMS", "01");
			
			client.sendData(fieldList.getBuff(dataMap));
        */
	
			dataMap.setMap("CO_TRAN"		 , "532002");
			dataMap.setMap("CO_DIV"	     	 , "000");
			dataMap.setMap("CO_DT"     	 	 , CbUtil.getCurrentTime12());
			dataMap.setMap("CO_BKNUM"		 , "032123454554");
			dataMap.setMap("CO_AGNUM"    	 , "000004412555");
			dataMap.setMap("GIRO_COD"        , "71");
			dataMap.setMap("GIRO_NO"         , "1234567");
			dataMap.setMap("REGNO"           , "8410251124628");
			dataMap.setMap("TOTPAY_NO"       , "T12312312312312");
			dataMap.setMap("TOT_CNT"         , "5");
			dataMap.setMap("TOT_SUM_B_AMT"   , "80835680");
			dataMap.setMap("PAY_DT"        	 , CbUtil.getCurrentDate());
			dataMap.setMap("BANK_COD"        , "0321234");
			dataMap.setMap("PAY_REG_NO"      , "8410251124628");
			dataMap.setMap("PAY_SYSTEM"      , "Y");
			dataMap.setMap("PAY_FSYSTEM"     , "Y");
			dataMap.setMap("PAY_FORM"        , "Y");
			dataMap.setMap("CH_INCLUDE"      , "Y");
			dataMap.setMap("CARD_REQ_NO"     , "123456789012");
			dataMap.setMap("CARD_MMS"        , "00");

			String snd = "0001425320011107191138450CT0000007720EP000961047261000685731103152031526470130110000153160000000000030402011071903900087311031520315SQ              ";
			
			snd = "000153532002IGN1107191932210CT0000026450EP0009618568999999997311031520315T2011071920000000100000020000000000060802011071903900087311031520315S CN              ";
			
			snd = "000115992001IGN1107221111350500129000070EP00096559926100540205061357912261121538050012900005110722111201000000000610740CQ";
			
			client.sendData(snd.getBytes());
			
			//client.sendData("0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              000115992001IGN1102241008230230500000800EP00248284826100068502386076303092037727023010000078110224100821000000000006170S 0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              0001425320011102241014300CT0000017640EP002483032261000685710228196667226470110100420090  000000000021880201102240842828             CQ              ".getBytes());
			
			
			
			long before = System.currentTimeMillis();
			
			byte[] recv  = client.recv(30);
			
			long after = System.currentTimeMillis();
			
			log.info("=============================================");
			log.info("  RECV TIME== " + ((after-before)/1000.0) + "Sec ::" +  new String(recv));
			log.info("=============================================");
			
			client.Disconnect();
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			// e.printStackTrace();
			log.error("=============================================");
			log.error(" RECV ¿À·ù¹ß»ý ID=" + myId + ", MSG=" + e.getMessage());
			log.error("=============================================");
		}
	}


	/**
	 * @return the myId
	 */
	public int getMyId() {
		return myId;
	}


	/**
	 * @param myId the myId to set
	 */
	public void setMyId(int myId) {
		this.myId = myId;
	}
	
	
}
